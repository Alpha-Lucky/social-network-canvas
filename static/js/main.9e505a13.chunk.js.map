{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","file","newPost","postId"],"mappings":"kGAAe,QAA0B,kC,sFCAnCA,EAAe,eAEjBC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,6BACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,MACjB,CAACH,GAAI,EAAGG,QAAS,QAiBZC,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAAMT,EAAcQ,mBAG7DE,IAhBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,KAAKT,EACD,IAAIa,EAAOD,EAAOJ,eAClB,OAAO,2BACAG,GADP,IAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsB,CAACF,GAAI,EAAGG,QAASO,OAEvD,QACI,OAAOF,K,gCC7BnB,mHAGMG,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAa,CACT,UAAW,0CAKNC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAEnCE,SAVoB,SAUXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GAEP,OADAK,QAAQC,KAAK,8CACNC,EAAWH,WAAWJ,KAIxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOxB,EAASyB,IAAT,iBAA+B,CAAED,OAAQA,KAEpDE,UAVsB,SAUZC,GACN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElB3B,EAASyB,IAAT,gBAA8BG,EAAU,CAC3CxB,QAAS,CACL,eAAgB,2BAMnB2B,EAAU,CACnBC,GADmB,WAEf,OAAOhC,EAASS,IAAT,YAEXwB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAOpC,EAASe,KAAT,aAA4B,CAAEmB,QAAOC,WAAUC,gBAE1DC,OAPmB,WAQf,OAAOrC,EAASiB,OAAT,iB,oBC5DfqB,EAAOC,QAAU,CAAC,UAAY,2B,qFCA9BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,wCCWjEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uHCYSC,EA1BA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,uBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,wBAEJ,qBAAKN,UAAS,UAAKC,IAAEE,KAAP,YAAeF,IAAEM,QAA/B,SACI,cAAC,IAAD,CAASH,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,qBAGJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,uCAEJ,qBAAKH,UAAWC,IAAEE,KAAlB,SACI,wCAEJ,qBAAKH,UAAWC,IAAEE,KAAlB,SACI,+C,+DCvBHK,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCHTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjChF,EAAe,CACfiF,MAAO,GACP5D,SAAU,GACV6D,gBAAiB,EACjB9D,YAAa,EACb+D,YAAY,EACZC,oBAAqB,GACrBC,KAAM,IAyCGC,EAAgB,SAAC3D,GAAD,MAAa,CAACnB,KAAMkE,EAAQ/C,WAC5C4D,EAAkB,SAAC5D,GAAD,MAAa,CAACnB,KAAMmE,EAAUhD,WAEhD6D,EAAiB,SAACpE,GAAD,MAAkB,CAACZ,KAAMqE,EAAkBzD,gBAE5DqE,EAAmB,SAACN,GAAD,MAAiB,CAAC3E,KAAMuE,EAAoBI,eAC/DO,EAA0B,SAACP,EAAYxD,GAAb,MAAyB,CAC5DnB,KAAMwE,EACNG,aACAxD,WAeEgE,EAAkB,uCAAG,WAAOC,EAAUjE,EAAQkE,EAAWC,GAApC,SAAAC,EAAA,6DACvBH,EAASF,GAAwB,EAAM/D,IADhB,SAEFkE,EAAUlE,GAFR,OAIS,GAJT,OAIVF,KAAKuE,YACdJ,EAASE,EAAcnE,IAE3BiE,EAASF,GAAwB,EAAO/D,IAPjB,2CAAH,4DAqBTsE,EAnFM,WAAmC,IAAlCvF,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,KAAKkE,EACD,OAAO,2BACAhE,GADP,IAEIuE,MAAOd,EAAoBzD,EAAMuE,MAAOtE,EAAOgB,OAAQ,KAAM,CAACuE,UAAU,MAEhF,KAAKvB,EACD,OAAO,2BACAjE,GADP,IAEIuE,MAAOd,EAAoBzD,EAAMuE,MAAOtE,EAAOgB,OAAQ,KAAM,CAACuE,UAAU,MAEhF,KAAKtB,EACD,OAAO,2BAAIlE,GAAX,IAAkBuE,MAAOtE,EAAOsE,QAEpC,KAAKJ,EACD,OAAO,2BAAInE,GAAX,IAAkBU,YAAaT,EAAOS,cAE1C,KAAK0D,EACD,OAAO,2BAAIpE,GAAX,IAAkBwE,gBAAiBvE,EAAOwF,QAE9C,KAAKpB,EACD,OAAO,2BAAIrE,GAAX,IAAkByE,WAAYxE,EAAOwE,aAEzC,KAAKH,EACD,OAAO,2BACAtE,GADP,IAEI0E,oBAAqBzE,EAAOwE,WAAP,sBACXzE,EAAM0E,qBADK,CACgBzE,EAAOgB,SACtCjB,EAAM0E,oBAAoBgB,QAAO,SAAAlG,GAAE,OAAIA,GAAMS,EAAOgB,YAGlE,QACI,OAAOjB,I,4DCbJ2F,EArCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBjF,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAamF,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBjF,GAEzCuF,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAC1C,EAAwCQ,mBAAS,GAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAG7C,OAAO,sBAAK7C,UAAW0D,IAAOC,UAAvB,UACDL,EAAgB,GAClB,wBAAQM,QAAS,WAAQL,EAAiBD,EAAgB,IAA1D,kBAEKL,EACIR,QAAO,SAAAoB,GAAC,OAAIA,GAAKL,GAAyBK,GAAGJ,KAC7C5C,KAAI,SAACgD,GACN,OAAO,sBAAM7D,UAAY8D,IAAG,eACvBJ,IAAOK,aAAetG,IAAgBoG,GACxCH,IAAOM,YAEGJ,QAAS,SAACK,GACNrB,EAAciB,IALxB,SAMUA,GAHCA,MAKxBT,EAAeE,GACb,wBAAQM,QAAS,WAAQL,EAAiBD,EAAgB,IAA1D,sB,2BCKGY,EAnCJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAM1C,EAA2C,EAA3CA,oBAAqBvD,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAC9C,OACG,gCACS,iCACI,8BACG,cAAC,IAAD,CAASqC,GAAI,YAAc+D,EAAK5H,GAAhC,SACC,qBAAK6H,IAA0B,MAArBD,EAAKE,OAAOC,MAAgBH,EAAKE,OAAOC,MAAQC,IACrDvE,UAAW0D,IAAOa,gBAG3B,8BACKJ,EAAK5B,SACA,wBAAQiC,SAAU/C,EACfgD,MAAK,SAAAlI,GAAE,OAAIA,IAAO4H,EAAK5H,MAClBqH,QAAS,WAAQ1F,EAASiG,EAAK5H,KAFvC,sBAIA,wBAAQiI,SAAU/C,EAAoBgD,MAAK,SAAAlI,GAAE,OAAIA,IAAO4H,EAAK5H,MACrDqH,QAAS,WAAQ7F,EAAOoG,EAAK5H,KADrC,yBAMd,iCACI,iCACI,8BAAM4H,EAAK3H,OACX,8BAAM2H,EAAKzF,YAEf,iCACI,8BAAM,0BACN,8BAAM,iC,uECZfgG,EAlBH,SAAC,GAA8E,IAA7EjH,EAA4E,EAA5EA,YAAa8D,EAA+D,EAA/DA,gBAAiB7D,EAA8C,EAA9CA,SAAUkF,EAAoC,EAApCA,cAAetB,EAAqB,EAArBA,MAAUqD,EAAW,iBACtF,OAAO,gCACH,cAAC,EAAD,CAAWlH,YAAaA,EAAamF,cAAeA,EACzCD,gBAAiBpB,EAAiB7D,SAAUA,IACvD,8BAEQ4D,EAAMT,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMqD,KAAMrD,EACNW,oBAAqBkD,EAAMlD,oBAE3BvD,SAAUyG,EAAMzG,SAChBH,OAAQ4G,EAAM5G,QAFT+C,EAAEvE,a,4BCN/BiB,GAAWoH,cAJC,SAAC7H,GACtB,OAAOA,EAAM8H,UAAUvD,SAIvB,SAACA,GACD,OAAOA,EAAMmB,QAAO,SAAA3B,GAAC,OAAI,QAGhBgE,GAAc,SAAC/H,GACxB,OAAOA,EAAM8H,UAAUnH,UAGdqH,GAAqB,SAAChI,GAC/B,OAAOA,EAAM8H,UAAUtD,iBAGdyD,GAAiB,SAACjI,GAC3B,OAAOA,EAAM8H,UAAUpH,aAGdwH,GAAgB,SAAClI,GAC1B,OAAOA,EAAM8H,UAAUrD,YAEd0D,GAAyB,SAACnI,GACnC,OAAOA,EAAM8H,UAAUpD,qBCRrB0D,G,4MAMFvC,cAAgB,SAACoB,GACb,IAAOtG,EAAY,EAAKiH,MAAjBjH,SACP,EAAKiH,MAAMnH,SAASwG,EAAYtG,I,uDAPpC,WACI,MAAgC0H,KAAKT,MAA9BlH,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,SACpB0H,KAAKT,MAAMnH,SAASC,EAAaC,K,oBAQrC,WAEI,OAAO,qCACF0H,KAAKT,MAAMnD,WAAa,cAAC6D,GAAA,EAAD,IAAe,KACxC,cAAC,EAAD,CAAO9D,gBAAiB6D,KAAKT,MAAMpD,gBAC5B7D,SAAU0H,KAAKT,MAAMjH,SACrBD,YAAa2H,KAAKT,MAAMlH,YACxBmF,cAAewC,KAAKxC,cACpBtB,MAAO8D,KAAKT,MAAMrD,MAClBvD,OAAQqH,KAAKT,MAAM5G,OACnBG,SAAUkH,KAAKT,MAAMzG,SACrBuD,oBAAqB2D,KAAKT,MAAMlD,6B,GAtBtB6D,IAAMC,WAwCpBC,gBACXC,aAbkB,SAAC1I,GACnB,MAAO,CACHuE,MAAO9D,GAAST,GAChBW,SAAUoH,GAAY/H,GACtBwE,gBAAiBwD,GAAmBhI,GACpCU,YAAauH,GAAejI,GAC5ByE,WAAYyD,GAAclI,GAC1B0E,oBAAqByD,GAAuBnI,MAMvB,CAACgB,OLiCR,SAACC,GACnB,8CAAO,WAAOiE,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUjE,EAAQT,IAASQ,OAAO2H,KAAKnI,KAAWoE,GADlE,2CAAP,uDKlCkCzD,SLsCd,SAACF,GACrB,8CAAO,WAAOiE,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUjE,EAAQT,IAASW,SAASwH,KAAKnI,KAAWqE,GADpE,2CAAP,uDKvC4CC,iBAAgBE,0BAAyBvE,SLW7D,SAACmI,EAAMjI,GAC/B,8CAAO,WAAOuE,GAAP,eAAAG,EAAA,6DACHH,EAASH,GAAiB,IAC1BG,EAASJ,EAAe8D,IAFrB,SAIcpI,IAASC,SAASmI,EAAMjI,GAJtC,OAICI,EAJD,OAKHmE,EAASH,GAAiB,IAC1BG,GAjBiBX,EAiBCxD,EAAK2C,MAjBK,CAAC5D,KAAMoE,EAAWK,WAkB9CW,GAhB2BV,EAgBCzD,EAAK8H,WAhBe,CAAC/I,KAAMsE,EAAuBqB,MAAOjB,KASlF,iCATuB,IAACA,EAFVD,IAWd,OAAP,yDKbWkE,CAEbL,I,oBC7CaU,GAZA,SAAClB,GACZ,OAAO,yBAAQ3E,UAAWC,KAAE6F,OAArB,UACH,qBAAK1B,IAAI,6DAET,qBAAKpE,UAAWC,KAAE8F,WAAlB,SACMpB,EAAMqB,OACF,gCAAMrB,EAAMxF,MAAZ,MAAqB,wBAAQyE,QAASe,EAAMpF,OAAvB,qBAArB,OACA,cAAC,IAAD,CAASa,GAAI,SAAb,yB,SCRZ6F,GAAgB,qCAElB5J,GAAe,CACf2B,OAAQ,KACRoB,MAAO,KACPD,MAAO,KACP6G,QAAQ,GAiBCE,GAAkB,SAAClI,EAAQoB,EAAOD,EAAO6G,GAAvB,MAAmC,CAC9DnJ,KAAMoJ,GAAeE,QACjB,CAACnI,SAAQoB,QAAOD,QAAO6G,YAGlBI,GAAkB,yDAAM,WAAOnE,GAAP,uBAAAG,EAAA,sEACZnD,IAAQC,KADI,OAGA,KAF7BrB,EAD6B,QAGpBC,KAAKuE,aAAmB,EACRxE,EAASC,KAAKA,KAAlCvB,EAD2B,EAC3BA,GAAI4C,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChB6C,EAASiE,GAAgB3J,EAAI6C,EAAOD,GAAO,KALd,2CAAN,uDA2BhBkH,GA9CK,WAAmC,IAAlCtJ,EAAiC,uDAAzBV,GAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAKoJ,GACD,OAAO,2BACAlJ,GACAC,EAAOmJ,SAGlB,QACI,OAAOpJ,IChBbuJ,G,4JAGF,WACI,OAAO,cAAC,GAAD,eAAYlB,KAAKT,Y,GAJFW,IAAMC,WAYrBE,gBALS,SAAC1I,GAAD,MAAY,CAChCiJ,OAAQjJ,EAAMwJ,KAAKP,OACnB7G,MAAOpC,EAAMwJ,KAAKpH,SAGkB,CAACI,ODiCnB,yDAAM,WAAO0C,GAAP,SAAAG,EAAA,sEACHnD,IAAQM,SADL,OAGS,IAHT,OAGXzB,KAAKuE,YACdJ,EAASiE,GAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,wDCjCPT,CAAmCa,I,gDCU5CE,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EAlBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,uBAAMC,SAAUF,EAAhB,UACKG,aAAY,QAAS,QAAS,CAACC,MAAWC,MAC1CF,aAAY,WAAY,WAAY,CAACC,MAAWC,KAAO,CAACnK,KAAM,aAC9DiK,aAAY,KAAM,aAAc,GAAIE,KAAO,CAACnK,KAAM,YAAa,eAE/D+J,GAAS,qBAAK5G,UAAWiH,KAAMC,iBAAtB,SACLN,IAGL,8BACI,mDA0BDnB,gBAJS,SAAC1I,GAAD,MAAY,CAChCiJ,OAAQjJ,EAAMwJ,KAAKP,UAGiB,CAAC7G,MFPpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAO2C,GAAP,iBAAAG,EAAA,sEAC7BnD,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BzB,EAD8C,QAErCC,KAAKuE,WACdJ,EAASmE,OAEL1J,EAAUmB,EAASC,KAAKrB,SAAS0K,OAAS,EAAItJ,EAASC,KAAKrB,SAAS,GAAK,aAC9EwF,EAASmF,aAAW,QAAS,CAACC,OAAQ3K,MANQ,2CAAjC,wDEON+I,EAlBD,SAACd,GAKX,OAAIA,EAAMqB,OACC,cAAC,IAAD,CAAU5F,GAAI,aAGlB,gCACH,uCACA,cAACoG,GAAD,CAAgBK,SAVH,SAAC/H,GACd6F,EAAMxF,MAAML,EAASM,MAAON,EAASO,SAAUP,EAASQ,qBC3B1DgI,GAAsB,sBAGxBjL,GAAe,CACfkL,aAAa,GA+BFC,GA5BI,WAAmC,IAAlCzK,EAAiC,uDAAzBV,GAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,KAAKyK,GACD,OAAO,2BACAvK,GADP,IAEIwK,aAAa,IAGrB,QACI,OAAOxK,I,mBCpBfV,GAAe,GAMJoL,GAJQ,WAAmC,IAAlC1K,EAAiC,uDAAzBV,GAC5B,OAAOU,G,oBCOP2K,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,YAAahL,KACbiL,QAASN,GACT5C,UAAWvC,EACXiE,KAAMF,GACNK,KAAMsB,KACNC,IAAKT,KAGHU,GAAmBvI,OAAOwI,sCAAwC3C,KAClE4C,GAAQC,aAAYX,GAAWQ,GAAiBI,aAAgBC,QACtE5I,OAAO6I,UAAYJ,GAEJA,UCpBFK,GAAe,SAAClD,GACzB,OAAO,SAACZ,GACJ,OAAO,cAAC,IAAM+D,SAAP,CAAgBC,SAAU,6CAA1B,SACH,cAACpD,EAAD,eAAeZ,QCQrBiE,GAAmBtD,IAAMuD,MAAK,kBAAM,iCACpCC,GAAmBxD,IAAMuD,MAAK,kBAAM,iCAIpCE,G,uKACF,WACI3D,KAAKT,MAAMqE,kB,oBAGf,WACI,OAAK5D,KAAKT,MAAM4C,YAKJ,sBAAKvH,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOiJ,KAAK,WACLC,OAAQT,GAAaG,MAE5B,cAAC,IAAD,CAAOK,KAAK,oBACLC,OAAQT,GAAaK,MAE5B,cAAC,IAAD,CAAOG,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,aAlB9B,cAAC7D,GAAA,EAAD,Q,GAPDE,aAoCd4D,GAAe3D,aACf4D,IACA3D,aANoB,SAAC1I,GAAD,MAAY,CAChCwK,YAAaxK,EAAMkL,IAAIV,eAKE,CAACyB,cJ/BD,kBAAM,SAAC/G,GAChC,IAAIoH,EAAUpH,EAASmE,MAIvBkD,QAAQC,IAAI,CAACF,IACRzL,MAAK,WACFqE,EAT6B,CAACpF,KAAMyK,YI+B7B9B,CAE4BuD,IAUhCS,GARM,SAAC7E,GACnB,OAAO,cAAC,IAAD,UACF,cAAC,IAAD,CAAUyD,MAAOA,GAAjB,SACI,cAACe,GAAD,SCxDZM,IAASP,OAAO,cAAC,GAAD,IAAiBQ,SAASC,eAAe,SlB0HnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlM,MAAK,SAAAmM,GACjCA,EAAaC,iB,8PmB9HbC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASxD,EAAsB,EAAtBA,MAAQyD,EAAc,EAAdA,SAC3CC,EAAWF,GAAWxD,EAC5B,OACI,sBAAK5G,UAAW0D,IAAO6G,YAAc,KAAOD,EAAW5G,IAAOkD,MAAQ,IAAtE,UACI,8BACKyD,IAEJC,GAAY,+BAAO1D,QAKnB4D,EAAW,SAAC7F,GACrB,IAAOuF,EAAoCvF,EAApCuF,MAAuBO,GAAa9F,EAA7BwF,KAA6BxF,EAAvB+F,MAApB,YAA2C/F,EAA3C,IACA,OAAO,cAACsF,EAAD,2BAAiBtF,GAAjB,aAAwB,oDAAcuF,GAAWO,QAG/CzD,EAAQ,SAACrC,GAClB,IAAOuF,EAAoCvF,EAApCuF,MAAuBO,GAAa9F,EAA7BwF,KAA6BxF,EAAvB+F,MAApB,YAA2C/F,EAA3C,IACA,OAAO,cAACsF,EAAD,2BAAiBtF,GAAjB,aAAwB,iDAAWuF,GAAWO,QAG5C3D,EAAc,SAAC6D,EAAanO,EAAMoO,EAAYC,GAAhC,IAA2ClG,EAA3C,uDAAmD,GAAImG,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aAAOH,YAAaA,EAAanO,KAAMA,EAChCuO,SAAUH,EACVC,UAAWA,GACPlG,IAJf,IAKQmG,O,gCCjCZ,uBAUezF,IAPC,SAACV,GACb,OACI,qBAAK3E,UAAU,gB,mBCJvBR,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,gCCD3H,oEAAO,IAAMsH,EAAW,SAAAiE,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAM7D,OAAS+D,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNlC1L,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,mBCArHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,6PCCzD0L,EAAW,WACXC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cACdC,EAAqB,qBAEvBlP,EAAe,CACfmP,MAAO,CACH,CAACjP,GAAI,EAAGG,QAAS,mBAAoB+O,WAAY,IACjD,CAAClP,GAAI,EAAGG,QAAS,qBAAuB+O,WAAY,IACpD,CAAClP,GAAI,EAAGG,QAAS,SAAU+O,WAAY,IACvC,CAAClP,GAAI,EAAGG,QAAS,OAAQ+O,WAAY,KAEzCC,QAAS,KACThN,OAAQ,IAwCCiN,EAAuB,SAACC,GAAD,MAAkB,CAAC/O,KAAMsO,EAAUS,gBAE1DC,EAAY,SAACnN,GAAD,MAAa,CAAC7B,KAAMwO,EAAY3M,WAI5CoN,EAAiB,SAAC9N,GAAD,8CAAY,WAAOiE,GAAP,eAAAG,EAAA,sEACf7E,IAASa,WAAWJ,GADL,OAChCH,EADgC,OAEtCoE,GAP2ByJ,EAOH7N,EAASC,KAPO,CAACjB,KAAMuO,EAAkBM,aAK3B,iCALZ,IAACA,IAKW,OAAZ,uDAKjBlN,EAAY,SAACR,GAAD,8CAAY,WAAOiE,GAAP,eAAAG,EAAA,sEACZ7D,IAAWC,UAAUR,GADT,OAC7BH,EAD6B,OAEjCoE,EAAS4J,EAAUhO,EAASC,OAFK,2CAAZ,uDAKZW,EAAe,SAACC,GAAD,8CAAY,WAAOuD,GAAP,SAAAG,EAAA,sEACf7D,IAAWE,aAAaC,GADT,OAGH,IAHG,OAGvBZ,KAAKuE,YACdJ,EAAS4J,EAAUnN,IAJa,2CAAZ,uDAOfE,EAAY,SAACmN,GAAD,8CAAU,WAAO9J,GAAP,eAAAG,EAAA,sEACV7D,IAAWK,UAAUmN,GADX,OAGE,KAF7BlO,EAD2B,QAGlBC,KAAKuE,YACdJ,GAvByBoC,EAuBCxG,EAASC,KAAKA,KAAKuG,OAvBR,CAACxH,KAAM0O,EAAoBlH,YAmBrC,iCAnBH,IAACA,IAmBE,OAAV,uDAQVwD,IApEQ,WAAmC,IAAlC9K,EAAiC,uDAAzBV,EAAcW,EAAW,uCAErD,OAAQA,EAAOH,MACX,KAAKsO,EACD,IAAIa,EAAU,CACVzP,GAAI,EACJG,QAASM,EAAO4O,YAChBH,WAAY,GAEhB,OAAO,2BACA1O,GADP,IAEIyO,MAAM,GAAD,mBAAMzO,EAAMyO,OAAZ,CAAmBQ,IACxBJ,YAAa,KAGrB,KAAKP,EACD,OAAO,2BACAtO,GADP,IAEI2B,OAAQ1B,EAAO0B,SAGvB,KAAK0M,EACD,OAAO,2BAAIrO,GAAX,IAAkB2O,QAAS1O,EAAO0O,UAGtC,KAAKJ,EACD,OAAO,2BAAIvO,GAAX,IAAkByO,MAAOzO,EAAMyO,MAAM/I,QAAO,SAAAoB,GAAC,OAAIA,EAAEtH,IAAMS,EAAOiP,YAEpE,KAAKV,EAED,OAAO,2BAAIxO,GAAX,IAAkB2O,QAAQ,2BAAK3O,EAAM2O,SAAZ,IAAqBrH,OAAQrH,EAAOqH,WACjE,QACI,OAAOtH,M","file":"static/js/main.9e505a13.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"ebcfee80-0a62-4c97-abac-67d1bcd076d6\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1IlJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__12BLH\",\"item\":\"Navbar_item__2qhCY\",\"activeLink\":\"Navbar_activeLink__2_ewL\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>loading...</div>} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)} />\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <HashRouter >\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","import React from \"react\";\r\nimport './preloader.css'\r\n\r\nlet Preloader = (props) =>  {\r\n    return(\r\n        <div className=\"preloader\">\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__12DRj\",\"error\":\"FormsControls_error__20Zom\",\"formSummaryError\":\"FormsControls_formSummaryError__2IjDJ\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1cOvt\",\"pageNumber\":\"Paginator_pageNumber__1d4Pu\",\"selectedPage\":\"Paginator_selectedPage__DyVRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3cL8L\",\"loginBlock\":\"Header_loginBlock__2jhED\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}