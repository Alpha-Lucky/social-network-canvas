{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","status__profile_info","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","Preloader","descriptionBlock","mainPhoto","src","photos","large","userPhoto","type","target","files","length","Post","item","message","span__heart","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","submit__profile__myposts","MyPosts","React","memo","postsElements","posts","reverse","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6635db9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__xsXty\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3xtcx\",\"status__profile_info\":\"ProfileInfo_status__profile_info__7zrQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3p7b8\",\"submit__profile__myposts\":\"MyPosts_submit__profile__myposts__RS2WZ\",\"posts\":\"MyPosts_posts__1e6Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YZoD\",\"span__heart\":\"Post_span__heart__2TYhZ\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span className={s.status__profile_info} onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.mainPhoto}>\r\n                    <img src={profile.photos.large || userPhoto} />\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                </div>\r\n                <div className={s.status}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n        { props.message }\r\n          <div>\r\n        <span className={s.span__heart}>&#10084;</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div className={s.submit__profile__myposts}>\r\n            <button className=\"submit\">Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post  message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n       // console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                    isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}