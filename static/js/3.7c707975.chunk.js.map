{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","status__profile_info","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDescription","profile","descriptionBlock__spanInfo","abooutMe","lookingForAJop","Object","keys","contacts","map","key","contactTitle","contactValue","Contacts","ProfileInfo","isOwner","savePhoto","Preloader","container__profile__thisuser","profile__ava_and_name_and_status","mainPhoto","label__down","for","input__down","src","photos","large","type","id","target","files","length","userPhoto","alt","name__status","fullName","descriptionBlock","Post","item","message","span__heart","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","submit__profile__myposts","MyPosts","React","memo","postsElements","posts","reverse","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7c707975.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__profile__thisuser\":\"ProfileInfo_container__profile__thisuser__1jHov\",\"profile__ava_and_name_and_status\":\"ProfileInfo_profile__ava_and_name_and_status__3s9Rw\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3xtcx\",\"name__status\":\"ProfileInfo_name__status__3kc0z\",\"status__profile_info\":\"ProfileInfo_status__profile_info__7zrQB\",\"input__down\":\"ProfileInfo_input__down__2q-DY\",\"label__down\":\"ProfileInfo_label__down__1Qvw5\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__xsXty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3p7b8\",\"submit__profile__myposts\":\"MyPosts_submit__profile__myposts__RS2WZ\",\"posts\":\"MyPosts_posts__1e6Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YZoD\",\"span__heart\":\"Post_span__heart__2TYhZ\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span className={s.status__profile_info} onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.container__profile__thisuser}>\r\n            <div className={s.profile__ava_and_name_and_status}>\r\n                <div className={s.mainPhoto}>\r\n                    {isOwner \r\n                    ? <label className={s.label__down} for=\"test\">\r\n                            <div className={s.input__down}>\r\n                                <img src={profile.photos.large} />\r\n                            </div>\r\n                                <input type={\"file\"} id=\"test\" onChange={onMainPhotoSelected} />\r\n                        </label> \r\n                    : <img src={profile.photos.large || userPhoto} alt=\"\" /> }\r\n                </div>\r\n\r\n                <div className={s.name__status}>\r\n                    <span>{profile.fullName} </span>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <ProfileDescription profile={profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDescription = ({ profile }) => {\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <div>\r\n                    <span className={s.descriptionBlock__spanInfo}>About me: {profile.abooutMe || <b>&#8943;</b> } </span>\r\n                </div>\r\n                <div>\r\n                    <span className={s.descriptionBlock__spanInfo}>Looking for a job: {profile.lookingForAJop ? \"yes\" : \"no\"} </span>\r\n                </div>\r\n                {profile.lookingForAJop &&\r\n                    <div>\r\n                        <span className={s.descriptionBlock__spanInfo}>My professionak skills: {profile.lookingForAJop} </span>\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <span className={s.descriptionBlock__spanInfo}> Contacts: {Object.keys(profile.contacts).map(key => {\r\n                        return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                    })} </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n    return <div><span>{contactTitle}: {contactValue}</span></div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <div>\r\n        <span>\r\n          {props.message}\r\n        </span>\r\n        <hr />\r\n      </div>\r\n      <div>\r\n        <span className={s.span__heart}>&#10084;</span>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div className={s.submit__profile__myposts}>\r\n            <button className=\"submit\">Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post  message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n\n       // console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                    isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}